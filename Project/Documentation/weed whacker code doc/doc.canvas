{
	"nodes":[
		{"id":"8f97720fd92294c8","x":1523,"y":-483,"width":250,"height":60,"type":"text","text":""},
		{"id":"e2a78b0cc4a2a8cc","type":"file","file":"game flow.md","x":362,"y":-930,"width":400,"height":300},
		{"id":"29458bbc5d4fa280","type":"text","text":"# weed whacker","x":377,"y":-1080,"width":340,"height":60},
		{"id":"ccdf3b22385399c5","type":"text","text":"Expected Behaviours\n--","x":389,"y":-600,"width":317,"height":60},
		{"id":"fc1f9e8a38e266ec","type":"text","text":"wave system - ","x":423,"y":-472,"width":250,"height":60},
		{"id":"079eee99acf583d2","type":"text","text":"spawn weeds","x":423,"y":-360,"width":250,"height":60},
		{"id":"8d47bd5b63950893","type":"text","text":"spawn flowers","x":427,"y":-260,"width":250,"height":60},
		{"id":"231a3bb1808ca8b4","type":"text","text":"## Game Logic Master","x":128,"y":-484,"width":214,"height":84},
		{"id":"3131d0b26c55e286","type":"text","text":"## Player","x":35,"y":-97,"width":250,"height":60},
		{"id":"58f4bbbe72134bc0","type":"text","text":"have player object have child that is collider2d with hitbox tag. have its collision disabled by default. create animation that sets this collider as active for a few frames, then make it inactive again. \npressing the attack button calls an event that plays this animation. ","x":775,"y":14,"width":473,"height":161},
		{"id":"a59903a1884f00f9","type":"text","text":"movement - player can use stick to walk in 8 directions\n","x":370,"y":-120,"width":250,"height":125},
		{"id":"ee3336d70fcb9ea4","type":"text","text":"attack - player can use button to swing shovel in last pressed direction (eg shovel is swung up and to the left if player is currently moving up and to the left, or if player is still and their last held direction was up and to the left)","x":370,"y":17,"width":309,"height":128},
		{"id":"3bdbbe745970ce30","type":"text","text":"public class PlayerStateMachine : StateManager<PlayerStateMachine.PlayerState>\n{\n    public enum PlayerState\n\t{\n\t\tIdle,\n\t\tWalk,\n\t\tRun\n\t}\n\tvoid Awake() \n\t{\n\t\tCurrentState = States[PlayerState.Idle];\n\t}\n}","x":1900,"y":-1060,"width":819,"height":360},
		{"id":"709dabf3f91a4e01","type":"text","text":"### player state machine\nthere is a universal state machine located in the scripts folder. it consists of two abstract classes stored as two different scripts; StateMachine and BaseState. \nall entities that have states should have a state machine that inherits from StateMachine, and their respective states should inherit from BaseState. \nwhen inheriting, make sure to replace the generic with a user created enum type to allow for type safety (fig. 1)","x":915,"y":-927,"width":645,"height":227},
		{"id":"369931788707d2ed","type":"text","text":"in update function, set velocity of rigidbody equal the vector2 held by input manager's move value","x":721,"y":-120,"width":400,"height":95},
		{"id":"023bf72108ed0e0e","type":"text","text":"## Enemy\n","x":35,"y":680,"width":250,"height":60},
		{"id":"46ef95b5d7fab0e8","type":"text","text":"chase - moves in direction of either a flower, player, or well; when hit by player, changes target to player","x":374,"y":680,"width":281,"height":120},
		{"id":"d072b3c84fa272a9","type":"text","text":"on entry, randomly chooses a target priority: player, flower, or well. then, sets that target to originalTargetObject. also set currentTargetObject to equal originalTargetObject. use math to set velocity to aim towards target and move at moveSpeed. when hit by player, change currentTargetObject to the player that hit it. when in range... ","x":700,"y":680,"width":415,"height":191},
		{"id":"44a4ba7830feb898","type":"text","text":"attack - when near target, play bite animation. on hit, if target was originally not the player, then return to pursuing original target. ","x":371,"y":820,"width":284,"height":118},
		{"id":"7b2452a5f658616b","type":"text","text":"play an attack animation. if the attack lands and the weed's original target was NOT the player, then set currentTargetObject to originalTargetObject.","x":755,"y":871,"width":340,"height":134},
		{"id":"f388d2ec10606ad3","type":"text","text":"take damage - when hit by player, sent backwards, and takes damage; if damage receieved meets or exceeds remaining health, play death animation and delete self from scene","x":342,"y":1005,"width":346,"height":140},
		{"id":"1fc9f557d4e5add9","type":"text","text":"knocked state - player's movement is slowed and cannot attack; enemies will ignore a knocked player. can be revived by other player through simply keeping contact for a certain amount of time.","x":391,"y":428,"width":334,"height":180},
		{"id":"2110eaa3352fb1f0","type":"text","text":"take damage/get knocked - when hit by an enemy, if damage taken meets or exceeds remaining health, player will go into knocked state. if not, then enemy's damage done is subtracted from player's health, they are sent in the direction the enemy's attack designates, and are placed in a temporary invulnerable state where they can still attack and are still chased by enemies, but they will take no damage until invulnerable state ends.","x":374,"y":220,"width":368,"height":139},
		{"id":"2bcf67139e148aab","type":"text","text":"run code that gets the position of the attacking weed. then, set the velocity to the attacker's knockbackSpeed (should be defined in their attatched script). also, have an animation called justHit that oscillates player's sprite color to indicate invincibility for a short period, and that also disables the player's hurtbox. upon invincibility expiration, reenable player's hurtbox.","x":788,"y":220,"width":460,"height":208},
		{"id":"61e189a3c6b3e017","type":"text","text":"when transitioning to knocked state, player will have moveSpeed set to knockedStateMoveSpeed (defined in playerScript). when revived and state is returned to standingState, set moveSpeed back to standingMoveSpeed.","x":814,"y":440,"width":395,"height":180},
		{"id":"56d91fa466ece063","type":"text","text":"knockback and damage recieved should be defined in playerScript. upon trigger, find the tied object's damage, knockback and position, and apply accordingly.","x":736,"y":1023,"width":313,"height":137},
		{"id":"84afde37179f223c","type":"text","text":"take damage - when enemy nearby drinks from well, lower remaining water count and update HUD; if water taken meets or exceeds remaining water...","x":394,"y":1260,"width":342,"height":141},
		{"id":"d08fe95bb6d51225","type":"text","text":"## Village Well\n","x":15,"y":1301,"width":250,"height":60},
		{"id":"633f780230205c5a","type":"text","text":"game end - if water taken meets or exceeds remaining water, then tell gameLogicMaster about it","x":480,"y":1440,"width":256,"height":100},
		{"id":"eec54400b87b9445","x":1115,"y":1160,"width":340,"height":101,"type":"text","text":"this method is used to future proof in case more weapons are added; by asking the attacking player object what value to use, less work will be required for that possible feature. "},
		{"id":"1e876faa0c091a95","x":1350,"y":-459,"width":250,"height":60,"type":"text","text":"## Demo screen"}
	],
	"edges":[
		{"id":"2b4df40118e4fee8","fromNode":"3131d0b26c55e286","fromSide":"right","toNode":"ee3336d70fcb9ea4","toSide":"left"},
		{"id":"11062a75cee85d3a","fromNode":"3131d0b26c55e286","fromSide":"right","toNode":"a59903a1884f00f9","toSide":"left"},
		{"id":"f25ac6c9c4b5bbca","fromNode":"3131d0b26c55e286","fromSide":"right","toNode":"2110eaa3352fb1f0","toSide":"left"},
		{"id":"e730992254a1d795","fromNode":"2110eaa3352fb1f0","fromSide":"bottom","toNode":"1fc9f557d4e5add9","toSide":"top"},
		{"id":"2ac627d158b28c6d","fromNode":"3131d0b26c55e286","fromSide":"right","toNode":"1fc9f557d4e5add9","toSide":"left"},
		{"id":"4b43276f918fc9de","fromNode":"023bf72108ed0e0e","fromSide":"right","toNode":"46ef95b5d7fab0e8","toSide":"left"},
		{"id":"ff1bb81a047e68ac","fromNode":"023bf72108ed0e0e","fromSide":"right","toNode":"44a4ba7830feb898","toSide":"left"},
		{"id":"ee8843f12ce4bf68","fromNode":"023bf72108ed0e0e","fromSide":"right","toNode":"f388d2ec10606ad3","toSide":"left"},
		{"id":"41fcd40c41855f4e","fromNode":"d08fe95bb6d51225","fromSide":"right","toNode":"84afde37179f223c","toSide":"left"},
		{"id":"41b205b32d5f5cae","fromNode":"46ef95b5d7fab0e8","fromSide":"bottom","toNode":"44a4ba7830feb898","toSide":"top","fromEnd":"arrow"},
		{"id":"797adf776ee946ad","fromNode":"d08fe95bb6d51225","fromSide":"right","toNode":"633f780230205c5a","toSide":"left"},
		{"id":"056de61578a14c9c","fromNode":"a59903a1884f00f9","fromSide":"right","toNode":"369931788707d2ed","toSide":"left"},
		{"id":"d958737e6d185c6b","fromNode":"ee3336d70fcb9ea4","fromSide":"right","toNode":"58f4bbbe72134bc0","toSide":"left"},
		{"id":"aa80547fca33ac16","fromNode":"1fc9f557d4e5add9","fromSide":"right","toNode":"61e189a3c6b3e017","toSide":"left"},
		{"id":"10ed2450aef21862","fromNode":"2110eaa3352fb1f0","fromSide":"right","toNode":"2bcf67139e148aab","toSide":"left"},
		{"id":"8f9586e8f11c1dba","fromNode":"46ef95b5d7fab0e8","fromSide":"right","toNode":"d072b3c84fa272a9","toSide":"left"},
		{"id":"652d137b346439cb","fromNode":"d072b3c84fa272a9","fromSide":"bottom","toNode":"7b2452a5f658616b","toSide":"top"},
		{"id":"75ddcec9fe892bff","fromNode":"44a4ba7830feb898","fromSide":"right","toNode":"7b2452a5f658616b","toSide":"left"},
		{"id":"7af4f58ef6f7b49a","fromNode":"f388d2ec10606ad3","fromSide":"right","toNode":"56d91fa466ece063","toSide":"left"},
		{"id":"05e625bc901c2abe","fromNode":"84afde37179f223c","fromSide":"bottom","toNode":"633f780230205c5a","toSide":"top"},
		{"id":"0903dc9277931f44","fromNode":"231a3bb1808ca8b4","fromSide":"right","toNode":"fc1f9e8a38e266ec","toSide":"left"},
		{"id":"5863516101ea36d3","fromNode":"231a3bb1808ca8b4","fromSide":"right","toNode":"079eee99acf583d2","toSide":"left"},
		{"id":"b8f7554613a11a28","fromNode":"231a3bb1808ca8b4","fromSide":"right","toNode":"8d47bd5b63950893","toSide":"left"},
		{"id":"4f8b88fdc869829d","fromNode":"709dabf3f91a4e01","fromSide":"right","toNode":"3bdbbe745970ce30","toSide":"left","label":"fig. 1"}
	]
}